<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config/>	
	<!-- 자동으로 등록할 컴포넌트가 있는 패키지를 지정 합니다.
		    리스너와 필터를 거쳐 들어온 데이터를 dpsevlet이 받아서 Mapping된 경로에 넣어주는데..
		    이때 POJO기반의 BEAN객체를 생성하고, 관련된 DI를 AUTOWIRED 합니다.
	 -->
	<context:component-scan base-package="net.cr.abrand">
		<context:exclude-filter type="regex" 
				expression="net.cr.abrand.test.*"/>
		<context:exclude-filter type="regex" 
				expression="net.cr.abrand.controls.*"/>	
	</context:component-scan>

	
	
	
	
		
	<!-- mybatis 객체 준비 : 스프링에서 마이바티스를 연동 하기 위해 제공됩니다. 필수 X -->
	<context:property-placeholder 
		location="classpath:net/cr/abrand/dao/db.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" 
			class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" 
				value="net.cr.abrand.vo" />		
		<property name="mapperLocations" 
				value="classpath*:net/cr/abrand/dao/*Mapper.xml" />			
	</bean>
</beans>









